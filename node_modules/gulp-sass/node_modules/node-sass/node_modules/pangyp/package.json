{
  "name": "pangyp",
  "description": "Node.js and io.js native addon build tool",
  "keywords": [
    "native",
    "addon",
    "module",
    "c",
    "c++",
    "bindings",
    "gyp"
  ],
  "version": "2.0.2",
  "author": {
    "name": "Nathan Rajlich",
    "email": "nathan@tootallnate.net",
    "url": "http://tootallnate.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rvagg/pangyp.git"
  },
  "preferGlobal": true,
  "bin": {
    "pangyp": "./bin/node-gyp.js"
  },
  "main": "./lib/node-gyp.js",
  "dependencies": {
    "fstream": "~1.0.3",
    "glob": "~4.3.5",
    "graceful-fs": "~3.0.5",
    "minimatch": "~2.0.1",
    "mkdirp": "^0.5.0",
    "nopt": "~3.0.1",
    "npmlog": "~1.0.0",
    "osenv": "0",
    "request": "~2.51.0",
    "rimraf": "~2.2.8",
    "semver": "~4.2.0",
    "tar": "~1.0.3",
    "which": "~1.0.8"
  },
  "devDependencies": {
    "buffertools": "~2.1.2",
    "leveldown": "~1.0.1"
  },
  "readme": "pangyp\r\n=========\r\n\r\n### Node.js and io.js native addon build tool\r\n\r\n***A (hopefully temporary) fork of [TooTallNate/node-gyp](https://github.com/TooTallNate/node-gyp) adding io.js support***\r\n\r\n`pangyp` is a cross-platform command-line tool written in Node.js for compiling\r\nnative addon modules for Node.js.  It bundles the [gyp](https://code.google.com/p/gyp/)\r\nproject used by the Chromium team and takes away the pain of dealing with the\r\nvarious differences in build platforms. It is the replacement to the `node-waf`\r\nprogram which is removed for node `v0.8`. If you have a native addon for node that\r\nstill has a `wscript` file, then you should definitely add a `binding.gyp` file\r\nto support the latest versions of node.\r\n\r\nMultiple target versions of node are supported (i.e. `0.8`, `0.9`, `0.10`, ..., `1.0`,\r\netc.), regardless of what version of node is actually installed on your system\r\n(`pangyp` downloads the necessary development files for the target version).\r\n\r\n#### Features:\r\n\r\n * Easy to use, consistent interface\r\n * Same commands to build your module on every platform\r\n * Supports multiple target versions of Node\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nYou can install with `npm`:\r\n\r\n``` bash\r\n$ npm install -g pangyp\r\n```\r\n\r\nYou will also need to install:\r\n\r\n  * On Unix:\r\n    * `python` (`v2.7` recommended, `v3.x.x` is __*not*__ supported)\r\n    * `make`\r\n    * A proper C/C++ compiler toolchain, like GCC\r\n  * On Windows:\r\n    * [Python][windows-python] ([`v2.7.3`][windows-python-v2.7.3] recommended, `v3.x.x` is __*not*__ supported)\r\n    * Windows XP/Vista/7:\r\n      * Microsoft Visual Studio C++ 2010 ([Express][msvc2010] version works well)\r\n      * For 64-bit builds of node and native modules you will _**also**_ need the [Windows 7 64-bit SDK][win7sdk]\r\n        * If the install fails, try uninstalling any C++ 2010 x64&x86 Redistributable that you have installed first.\r\n      * If you get errors that the 64-bit compilers are not installed you may also need the [compiler update for the Windows SDK 7.1]\r\n    * Windows 7/8:\r\n      * Microsoft Visual Studio C++ 2012/13 for Windows Desktop ([Express][msvc2012] version works well)\r\n\r\nIf you have multiple Python versions installed, you can identify which Python\r\nversion `pangyp` uses by setting the '--python' variable:\r\n\r\n``` bash\r\n$ pangyp --python /path/to/python2.7\r\n```\r\n\r\nIf `pangyp` is called by way of `npm` *and* you have multiple versions of\r\nPython installed, then you can set `npm`'s 'python' config key to the appropriate\r\nvalue:\r\n\r\n``` bash\r\n$ npm config set python /path/to/executable/python2.7\r\n```\r\n\r\nNote that OS X is just a flavour of Unix and so needs `python`, `make`, and C/C++.\r\nAn easy way to obtain these is to install XCode from Apple,\r\nand then use it to install the command line tools (under Preferences -> Downloads).\r\n\r\nHow to Use\r\n----------\r\n\r\nTo compile your native addon, first go to its root directory:\r\n\r\n``` bash\r\n$ cd my_node_addon\r\n```\r\n\r\nThe next step is to generate the appropriate project build files for the current\r\nplatform. Use `configure` for that:\r\n\r\n``` bash\r\n$ pangyp configure\r\n```\r\n\r\n__Note__: The `configure` step looks for the `binding.gyp` file in the current\r\ndirectory to process. See below for instructions on creating the `binding.gyp` file.\r\n\r\nNow you will have either a `Makefile` (on Unix platforms) or a `vcxproj` file\r\n(on Windows) in the `build/` directory. Next invoke the `build` command:\r\n\r\n``` bash\r\n$ pangyp build\r\n```\r\n\r\nNow you have your compiled `.node` bindings file! The compiled bindings end up\r\nin `build/Debug/` or `build/Release/`, depending on the build mode. At this point\r\nyou can require the `.node` file with Node and run your tests!\r\n\r\n__Note:__ To create a _Debug_ build of the bindings file, pass the `--debug` (or\r\n`-d`) switch when running either the `configure`, `build` or `rebuild` command.\r\n\r\n\r\nThe \"binding.gyp\" file\r\n----------------------\r\n\r\nPreviously when node had `node-waf` you had to write a `wscript` file. The\r\nreplacement for that is the `binding.gyp` file, which describes the configuration\r\nto build your module in a JSON-like format. This file gets placed in the root of\r\nyour package, alongside the `package.json` file.\r\n\r\nA barebones `gyp` file appropriate for building a node addon looks like:\r\n\r\n``` python\r\n{\r\n  \"targets\": [\r\n    {\r\n      \"target_name\": \"binding\",\r\n      \"sources\": [ \"src/binding.cc\" ]\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nSome additional resources for addons and writing `gyp` files:\r\n\r\n * [\"Going Native\" a nodeschool.io tutorial](http://nodeschool.io/#goingnative)\r\n * [\"Hello World\" node addon example](https://github.com/joyent/node/tree/master/test/addons/hello-world)\r\n * [gyp user documentation](http://code.google.com/p/gyp/wiki/GypUserDocumentation)\r\n * [gyp input format reference](http://code.google.com/p/gyp/wiki/InputFormatReference)\r\n * [*\"binding.gyp\" files out in the wild* wiki page](https://github.com/TooTallNate/node-gyp/wiki/%22binding.gyp%22-files-out-in-the-wild)\r\n\r\n\r\nCommands\r\n--------\r\n\r\n`pangyp` responds to the following commands:\r\n\r\n| **Command**   | **Description**\r\n|:--------------|:---------------------------------------------------------------\r\n| `build`       | Invokes `make`/`msbuild.exe` and builds the native addon\r\n| `clean`       | Removes the `build` directory if it exists\r\n| `configure`   | Generates project build files for the current platform\r\n| `rebuild`     | Runs `clean`, `configure` and `build` all in a row\r\n| `install`     | Installs node development header files for the given version\r\n| `list`        | Lists the currently installed node development file versions\r\n| `remove`      | Removes the node development header files for the given version\r\n\r\n\r\nLicense\r\n-------\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\n[windows-python]: http://www.python.org/getit/windows\r\n[windows-python-v2.7.3]: http://www.python.org/download/releases/2.7.3#download\r\n[msvc2010]: http://go.microsoft.com/?linkid=9709949\r\n[msvc2012]: http://go.microsoft.com/?linkid=9816758\r\n[win7sdk]: http://www.microsoft.com/en-us/download/details.aspx?id=8279\r\n[compiler update for the Windows SDK 7.1]: http://www.microsoft.com/en-us/download/details.aspx?id=4422\r\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rvagg/pangyp/issues"
  },
  "homepage": "https://github.com/rvagg/pangyp",
  "_id": "pangyp@2.0.2",
  "dist": {
    "shasum": "95f4f2bb6e6e86a4221f19a2e82801f1de18cd94"
  },
  "_resolved": "git://github.com/am11/pangyp#f13599f5198b853948429062c2b334010a337342",
  "_from": "git://github.com/am11/pangyp",
  "_fromGithub": true
}
